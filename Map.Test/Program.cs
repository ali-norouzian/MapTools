using Map.Test;

/*
 * 35.77073347956181,51.34555826848825
 * 35.76664122949283,51.36639909057226
 * 35.77622457505403,51.390256035448175
 * 35.75060314782466,51.3860459863518
 * 35.75107769368964,51.348506381916934
 *
 * IN:    35.761426394534126,51.368868891136145
 * OUT1:  35.7783910520332,51.38525402256553
 * *OUT2: 35.77122990023294,51.3644431976075
*/

var lats = new double[] { 35.77073347956181, 35.76664122949283, 35.77622457505403, 35.75060314782466, 35.75107769368964 };
var lngs = new double[] { 51.34555826848825, 51.36639909057226, 51.390256035448175, 51.3860459863518, 51.348506381916934 };

var polygon = new Polygon(lats, lngs);

var res1 = await polygon.IsPointInPolygon(35.77122990023294, 51.3644431976075);

Console.WriteLine(res1);


/*
 * CENTER:          35.766663462695334,51.36670241910602
 * R:(in meter)     1000
 * IN1:				35.76992535615699,51.36899964376417
 * IN2:				35.76433345689179,51.36095935746306
 * OUT1:			35.77588961537117,51.36302685965421
 * OUT2:			35.74941980366353,51.37141172965417
*/

var circle = new Circle(35.766663462695334, 51.36670241910602, 1000);
var res2 = await circle.IsPointInCircle(35.74941980366353, 51.37141172965417);

Console.WriteLine(res2);
